name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          7171man/testpark:latest
          7171man/testpark:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to production server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          # Pull latest image from Docker Hub
          docker pull 7171man/testpark:latest

          # Stop and remove existing container
          docker stop testpark || true
          docker rm testpark || true

          # Run new container
          docker run -d \
            --name testpark \
            --restart unless-stopped \
            -p 3000:3000 \
            7171man/testpark:latest

          # Clean up old images
          docker image prune -f

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "🎉 배포가 성공적으로 완료되었습니다!"
        else
          echo "❌ 배포 중 오류가 발생했습니다."
        fi