# TestPark Docker Compose - Production DB Configuration
# carpenterhosting.cafe24.com DB를 사용하는 설정
#
# 사용 방법:
# docker-compose -f docker-compose.prod-db.yml up -d

services:
  # TestPark 메인 애플리케이션 (운영 DB 사용)
  testpark:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: testpark
    ports:
      - "8000:8000"
    volumes:
      - ./media:/app/media  # 업로드 파일 유지
      - ./seongdal-a900e25ac63c.json:/app/seongdal-a900e25ac63c.json  # 구글 시트 인증 파일
    env_file:
      - .env
    environment:
      # 운영 MariaDB 연결 설정 (carpenterhosting.cafe24.com)
      - USE_MYSQL=True
      - USE_PRODUCTION_DB=True
      - PROD_DB_HOST=carpenterhosting.cafe24.com
      - PROD_DB_NAME=testpark
      - PROD_DB_USER=testpark
      - PROD_DB_PASSWORD=**jeje4211
      - PROD_DB_PORT=3306
      # 네이버 로그인 및 프록시 설정
      - ALLOWED_HOSTS=carpenterhosting.cafe24.com,210.114.22.100,localhost,127.0.0.1
      - USE_X_FORWARDED_HOST=true
      - USE_X_FORWARDED_PORT=true
      - SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
      - FORCE_SCRIPT_NAME=
      # 네트워크 최적화
      - DJANGO_SETTINGS_MODULE=testpark_project.settings
      - PYTHONUNBUFFERED=1  # 로그 버퍼링 비활성화
    restart: unless-stopped
    networks:
      - testpark-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.testpark.service=main"
      - "com.testpark.description=TestPark Django Application with Production DB"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.5'

networks:
  testpark-network:
    driver: bridge
    name: testpark-network
