"""
Django settings for testpark_project project.

Generated by 'django-admin startproject' using Django 4.2.24.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# .env 파일 로드
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-nlk5agkjp1+7+sp168_46gy#h0gdmh%#5ano(r196@c+p7m-ny')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True').lower() in ('true', '1', 'yes')

ALLOWED_HOSTS = ['*']  # Docker 환경에서 모든 호스트 허용

# 프록시 설정 (Apache Reverse Proxy)
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# CSRF 설정
CSRF_TRUSTED_ORIGINS = [
    'https://carpenterhosting.cafe24.com',
    'http://carpenterhosting.cafe24.com',
    'https://210.114.22.100',
    'http://210.114.22.100',
    'http://210.114.22.100:8000',
    'http://localhost:8000',
    'http://127.0.0.1:8000',
]

# CSRF 설정 추가
CSRF_COOKIE_SECURE = False  # HTTP도 허용
CSRF_COOKIE_SAMESITE = 'Lax'  # SameSite 정책 완화
CSRF_USE_SESSIONS = False  # 쿠키 기반 CSRF 토큰 사용
CSRF_COOKIE_HTTPONLY = False  # JavaScript에서 접근 가능
CSRF_COOKIE_NAME = 'csrftoken'
CSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'rest_framework',
    'corsheaders',
    'demo',
    'accounts',
    'staff',
    'member',
    'company',
    'join',
    'license',
    'stop',
    'impossibleterm',
    'area',
    'possiblearea',
    'order',
    'gonggu',
    'contract',
    'evaluation',
    'template',
    'point',
    'companycondition',
    'fixfee',
    'globalvars',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'testpark_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'testpark_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (User uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'accounts.CustomUser'

# 네이버 소셜 로그인 설정
NAVER_CLIENT_ID = os.getenv('NAVER_CLIENT_ID', '_mw6kojqJVXoWEBqYBKv')
NAVER_CLIENT_SECRET = os.getenv('NAVER_CLIENT_SECRET', 'hHKrIfKoMA')
NAVER_REDIRECT_URI = os.getenv('NAVER_REDIRECT_URI', 'http://localhost:8000/auth/naver/callback/')

# 잔디 웹훅 설정
JANDI_WEBHOOK_URL = os.getenv('JANDI_WEBHOOK_URL', 'https://wh.jandi.com/connect-api/webhook/15016768/2ee8d5e97543e5fe885aba1f419a9265')

# ================================================================================
# 업체평가 전역변수 설정 (Global Variables for Company Evaluation)
# ================================================================================

# 현재 업체평가 회차
G_N_EVALUATION_NO = 63  # 현재 업체평가 회차

# A. 실적 관련 점수 계수
G_F_EVALUATION_A1 = 15.0  # 계약률 점수 계수
G_F_EVALUATION_A1_MAX = 200.0  # 계약률 점수 최대값
G_F_EVALUATION_A2 = 20000.0  # 수수료 점수 계수
G_F_EVALUATION_A3 = 40000.0  # 고정비 점수 계수
G_F_EVALUATION_A4 = 200000.0  # 자재구매액 점수 계수

# B. 고객후기 점수 계수
G_F_EVALUATION_B = 30.0  # 후기 점수 계수 = 고객후기 갯수 X 30
G_F_EVALUATION_B_MAX = 120.0  # 후기 점수 최대값

# C. 고객불만 점수 계수
G_F_EVALUATION_C = -150.0  # 고객불만점수 계수

# D. 고객만족도 점수 계수
G_F_EVALUATION_D = 0.5  # 고객만족도 점수 계수

# E. 카페지식활동 점수 계수
G_F_EVALUATION_E = 0.84  # 카페지식활동 점수
G_F_EVALUATION_E_MAX = 130.0  # 카페지식활동 점수 최대값

# F. 지식공유활동 점수 계수
G_F_EVALUATION_F = 2.52  # 지식공유활동 점수 계수
G_F_EVALUATION_F_MAX = 130.0  # 지식공유활동 점수 최대값

# G. 세미나참석 점수 계수
G_F_EVALUATION_G = 30.0  # 세미나참석 점수 계수
G_F_EVALUATION_G_MAX = 30.0  # 세미나참석 점수 최대값

# H. 멘토 점수 계수
G_F_EVALUATION_H = 20.0  # 멘토 점수 계수

# I. 이행보증참여 점수 계수
G_F_EVALUATION_I = 30.0  # 이행보증참여 점수 계수

# J. 안전캠페인 점수 계수
G_F_EVALUATION_J = 10.0  # 안전캠페인 점수 계수
G_F_EVALUATION_J_MAX = 20.0  # 안전캠페인 점수 최대값

# 할당부족 관련 계수
G_N_ASSIGN_LACK = 10  # 고정비업체 할당부족 개수 계수(최소일수)
G_F_ASSIGN_LACK = 165000.0  # 고정비업체 할당부족 개수 계수

# Django REST Framework 설정
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    # 개발 환경 최적화
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '1000/hour',
        'user': '2000/hour'
    },
    # API 응답 최적화
    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',
    'DATE_FORMAT': '%Y-%m-%d',
}

# CORS 설정
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # React 개발 서버
    "http://127.0.0.1:3000",
    "http://localhost:8000",  # Django 서버
    "http://127.0.0.1:8000",
    "http://testpark-frontend:3000",  # Docker 컨테이너 간 통신
    "http://testpark:8000",  # Docker 컨테이너 간 통신
    "https://carpenterhosting.cafe24.com",
    "http://carpenterhosting.cafe24.com",
    "https://210.114.22.100",
    "http://210.114.22.100",
]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_ALL_ORIGINS = DEBUG  # 개발 환경에서만 모든 오리진 허용
