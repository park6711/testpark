# Generated by Django 5.1.1 on 2025-09-17 10:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='네이버 이메일 매칭용', max_length=254, unique=True)),
                ('name', models.CharField(help_text='실명', max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('naver_id', models.CharField(blank=True, help_text='네이버 사용자 고유 ID', max_length=100, null=True, unique=True)),
                ('naver_email', models.EmailField(blank=True, help_text='네이버에서 받은 이메일', max_length=254, null=True)),
                ('naver_name', models.CharField(blank=True, help_text='네이버에서 받은 이름', max_length=100, null=True)),
                ('auth_code', models.CharField(blank=True, help_text='6자리 인증번호', max_length=6, null=True)),
                ('auth_code_expires', models.DateTimeField(blank=True, help_text='인증번호 만료시간', null=True)),
                ('is_naver_linked', models.BooleanField(default=False, help_text='네이버 계정 연동 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자들',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuthSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(help_text='세션 키', max_length=255, unique=True)),
                ('naver_data', models.JSONField(help_text='네이버에서 받은 데이터 임시 저장')),
                ('auth_code', models.CharField(help_text='발송된 인증번호', max_length=6)),
                ('expires_at', models.DateTimeField(help_text='세션 만료시간')),
                ('is_verified', models.BooleanField(default=False, help_text='인증 완료 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, help_text='연결된 사용자', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '인증 세션',
                'verbose_name_plural': '인증 세션들',
                'db_table': 'auth_session',
                'ordering': ['-created_at'],
            },
        ),
    ]
