# TestPark Docker Compose 구성
#
# 서비스 구성:
# - MariaDB: 데이터베이스 서버
# - TestPark: Django + React 통합 앱
# - Frontend: React 개발 서버 (개발 시 선택적)
#
# Webhook 서버는 로컬에서 실행 (scripts/webhook-server.js)
services:
  # MariaDB 데이터베이스
  mariadb:
    image: mariadb:11.2
    container_name: testpark-mariadb
    ports:
      - "3306:3306"  # 로컬에서 접속 가능
    environment:
      - MYSQL_ROOT_PASSWORD=testpark-root
      - MYSQL_DATABASE=testpark
      - MYSQL_USER=testpark
      - MYSQL_PASSWORD=testpark123
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
      - TZ=Asia/Seoul
    volumes:
      - mariadb-data:/var/lib/mysql
      - ./docker/mariadb/init:/docker-entrypoint-initdb.d  # 초기 SQL 스크립트 (선택사항)
    networks:
      - testpark-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    labels:
      - "com.testpark.service=database"
      - "com.testpark.description=TestPark MariaDB Database"

  # React 프론트엔드 (개발용)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: testpark-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      # 개발 환경: localhost, 프로덕션: 실제 도메인 사용
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - CHOKIDAR_USEPOLLING=true  # 파일 변경 감지 개선
      - NODE_OPTIONS=--max-old-space-size=4096  # Node.js 메모리 할당 증가
    restart: unless-stopped
    networks:
      - testpark-network
    labels:
      - "com.testpark.service=frontend"
      - "com.testpark.description=TestPark React Frontend"
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # TestPark 메인 애플리케이션
  testpark:
    image: 7171man/testpark:latest
    container_name: testpark
    ports:
      - "8000:8000"
    volumes:
      - ./media:/app/media  # 업로드 파일 유지
      - ./seongdal-a900e25ac63c.json:/app/seongdal-a900e25ac63c.json  # 구글 시트 인증 파일
    env_file:
      - .env
    environment:
      # MariaDB 연결 설정
      - USE_MYSQL=True
      - DB_HOST=mariadb  # Docker 네트워크 내부 호스트명
      - DB_NAME=testpark
      - DB_USER=testpark
      - DB_PASSWORD=**jeje4211
      - DB_PORT=3306
      # 네이버 로그인 및 프록시 설정
      - ALLOWED_HOSTS=carpenterhosting.cafe24.com,210.114.22.100,localhost,127.0.0.1
      - USE_X_FORWARDED_HOST=true
      - USE_X_FORWARDED_PORT=true
      - SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
      - FORCE_SCRIPT_NAME=
      # 네트워크 최적화
      - DJANGO_SETTINGS_MODULE=testpark_project.settings
      - PYTHONUNBUFFERED=1  # 로그 버퍼링 비활성화
    depends_on:
      mariadb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - testpark-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.testpark.service=main"
      - "com.testpark.description=TestPark Django Application"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.5'

networks:
  testpark-network:
    driver: bridge
    name: testpark-network

# Docker 볼륨
volumes:
  mariadb-data:
    name: testpark-mariadb-data

# 프로젝트 메타데이터
x-project-info:
  name: "TestPark"
  description: "TestPark Full-Stack Application (Django + React)"
  version: "3.0.0"
  services:
    - "MariaDB Database (port 3306)"
    - "React Frontend (port 3000)"
    - "Django Backend API (port 8000)"
  external_dependencies:
    - "Apache Proxy (ports 80/443)"
    - "intea Django WSGI"
    - "PMIS Django WSGI"